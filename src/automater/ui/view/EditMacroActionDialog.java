/*
 *  Created by Kristiyan Butev.
 *  Copyright Â© 2024 Kristiyan Butev. All rights reserved.
 */
package automater.ui.view;

import automater.datasource.MacroActionKindsDataSource;
import automater.datasource.MutableEntryDataSource;
import automater.model.MutableStorageValue;
import automater.utilities.Callback;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 *
 * @author Kristiyan Butev
 */
public class EditMacroActionDialog extends javax.swing.JDialog {

    // UI callbacks
    public Callback.Param<Integer> onKindChange = Callback.buildBlankWithParameter();
    public Callback.Param<MutableStorageValue.Protocol> onEditItem = Callback.buildBlankWithParameter();
    public Callback.Blank onSave = Callback.buildBlank();
    public Callback.Blank onWindowCloseClick = Callback.buildBlank();
    
    /**
     * Creates new form EditMacroActionDialog
     */
    public EditMacroActionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setup();
    }
    
    private void setup() {
        addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {}
            @Override
            public void windowClosing(WindowEvent e) {
                onWindowCloseClick.perform();
            }
            @Override
            public void windowClosed(WindowEvent e) {}
            @Override
            public void windowIconified(WindowEvent e) {}
            @Override
            public void windowDeiconified(WindowEvent e) {}
            @Override
            public void windowActivated(WindowEvent e) {}
            @Override
            public void windowDeactivated(WindowEvent e) {}
        });
        
        actionFieldsList.addListSelectionListener((var selection) -> {
            onSelectItem(selection.getFirstIndex());
        });
    }
    
    private void onSelectItem(int index) {
        editButton.setEnabled(index != -1);
    }
    
    // # Configuration
    
    public @Nullable MacroActionKindsDataSource getKindsDataSource() {
        return kindsDataSource;
    }
    
    public void setKindsDataSource(@NotNull MacroActionKindsDataSource dataSource) {
        kindsDataSource = dataSource;
        actionTypeDropdown.setModel(dataSource);
    }
    
    public void setFieldsDataSource(@NotNull MutableEntryDataSource dataSource) {
        fieldsDataSource = dataSource;
        actionFieldsList.setModel(dataSource);
    }
    
    public void setActionName(@NotNull String name) {
        actionName.setText(name);
    }
    
    public void selectKind(@NotNull String kind) {
        actionTypeDropdown.setSelectedItem(kind);
    }
    
    public void refreshData() {
        actionFieldsList.updateUI();
    }
    
    // # Public
    
    public void present() {
        setVisible(true);
    }
    
    // # Storage
    
    private @Nullable MacroActionKindsDataSource kindsDataSource;
    private @Nullable MutableEntryDataSource fieldsDataSource;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        actionFieldsList = new javax.swing.JList<>();
        saveButton = new javax.swing.JButton();
        actionName = new javax.swing.JLabel();
        actionTypeDropdown = new javax.swing.JComboBox<>();
        editButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit action");

        actionFieldsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        actionFieldsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actionFieldsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(actionFieldsList);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        actionName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        actionName.setText("Action name");

        actionTypeDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        actionTypeDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionTypeDropdownActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.setEnabled(false);
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(actionName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton))
                    .addComponent(actionTypeDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(actionName, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(actionTypeDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(editButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        onSave.perform();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void actionFieldsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionFieldsListMouseClicked
        var index = actionFieldsList.getSelectedIndex();
        
        if (evt.getClickCount() > 1 && fieldsDataSource != null) {
            var item = fieldsDataSource.getData().get(index);
            onEditItem.perform(item);
        }
    }//GEN-LAST:event_actionFieldsListMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        var index = actionFieldsList.getSelectedIndex();
        
        if (fieldsDataSource != null) {
            var item = fieldsDataSource.getData().get(index);
            onEditItem.perform(item);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void actionTypeDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionTypeDropdownActionPerformed
        onKindChange.perform(kindsDataSource.getSelectedIndex());
    }//GEN-LAST:event_actionTypeDropdownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditMacroActionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditMacroActionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditMacroActionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditMacroActionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            EditMacroActionDialog dialog = new EditMacroActionDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> actionFieldsList;
    private javax.swing.JLabel actionName;
    private javax.swing.JComboBox<String> actionTypeDropdown;
    private javax.swing.JButton editButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
