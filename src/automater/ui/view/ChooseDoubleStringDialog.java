/*
 *  Created by Kristiyan Butev.
 *  Copyright Â© 2024 Kristiyan Butev. All rights reserved.
 */
package automater.ui.view;

import automater.utilities.Callback;
import java.awt.Component;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jetbrains.annotations.NotNull;

/**
 *
 * @author Kristiyan Butev
 */
public class ChooseDoubleStringDialog extends javax.swing.JDialog implements View {
    
    // UI callbacks
    public Callback.Param<String> onText1Changed = Callback.buildBlankWithParameter();
    public Callback.Param<String> onText2Changed = Callback.buildBlankWithParameter();
    public Callback.Blank onSave = Callback.buildBlank();

    /**
     * Creates new form ChooseDoubleStringDialog
     */
    public ChooseDoubleStringDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setup();
    }
    
    // # View
    
    @Override
    public Component asComponent() {
        return this;
    }
    
    @Override
    public void reloadData() {
        
    }
    
    // # Setup
    
    private void setup() {
        hideError();
        
        param1TextField.getDocument().addDocumentListener(new DocumentListener() {
            
            @Override
            public void changedUpdate(DocumentEvent e) {
                onText1Changed.perform(param1TextField.getText());
            }
            
            @Override
            public void removeUpdate(DocumentEvent e) {
                onText1Changed.perform(param1TextField.getText());
            }
            
            @Override
            public void insertUpdate(DocumentEvent e) {
                onText1Changed.perform(param1TextField.getText());
            }
        });
        
        param2TextField.getDocument().addDocumentListener(new DocumentListener() {
            
            @Override
            public void changedUpdate(DocumentEvent e) {
                onText2Changed.perform(param2TextField.getText());
            }
            
            @Override
            public void removeUpdate(DocumentEvent e) {
                onText2Changed.perform(param2TextField.getText());
            }
            
            @Override
            public void insertUpdate(DocumentEvent e) {
                onText2Changed.perform(param2TextField.getText());
            }
        });
    }
    
    // # Fields
    
    public boolean isErrorVisible() {
        return errorLabel.isVisible();
    }
    
    public @NotNull String getFieldText1() {
        return param1TextField.getText();
    }
    
    public void setFieldText1(@NotNull String text) {
        param1TextField.setText(text);
    }
    
    public void setFieldText1Name(@NotNull String name) {
        param1Label.setText(name);
    }
    
    public @NotNull String getFieldText2() {
        return param2TextField.getText();
    }
    
    public void setFieldText2(@NotNull String text) {
        param2TextField.setText(text);
    }
    
    public void setFieldText2Name(@NotNull String name) {
        param2Label.setText(name);
    }
    
    public void setErrorText(@NotNull String text) {
        errorLabel.setVisible(!text.isEmpty());
        errorLabel.setText(text);
    }
    
    public void hideError() {
        errorLabel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        param1Label = new javax.swing.JLabel();
        param1TextField = new javax.swing.JTextField();
        param2TextField = new javax.swing.JTextField();
        param2Label = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit values");

        param1Label.setText("Param 1");

        param1TextField.setText("text");

        param2TextField.setText("text");

        param2Label.setText("Param 2");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText("Error");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(param1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(param1TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(param2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(param2TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(param1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(param2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(param1TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(param2TextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(errorLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        onSave.perform();
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseDoubleStringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseDoubleStringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseDoubleStringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseDoubleStringDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ChooseDoubleStringDialog dialog = new ChooseDoubleStringDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel param1Label;
    private javax.swing.JTextField param1TextField;
    private javax.swing.JLabel param2Label;
    private javax.swing.JTextField param2TextField;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
